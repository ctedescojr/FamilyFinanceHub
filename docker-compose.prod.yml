services:
  # PostgreSQL database
  db:
    image: postgres:17-alpine
    container_name: ffh_postgres_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for cahce and sessions
  redis:
    image: redis:7-alpine
    container_name: ffh_redis_prod
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ffh_backend_prod
    volumes:
      - media_files:/app/media
      - static_files:/app/staticfiles
    env_file:
      - .env
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  # Nginx (Reverse prox for production)
  nginx:
    build:
      context: ./frontend
      target: production
      dockerfile: Dockerfile
    container_name: ffh_nginx_prod
    volumes:
      - ./frontend/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - static_files:/var/www/static
      - media_files:/var/www/media
    env_file:
      - .env
    environment:
      - VITE_API_BASE_URL=/api
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

  # Celery Worker (Async tasks)
  celery-worker:
    build:
      context: ./backend
    container_name: ffh_celery_worker_prod
    command: celery -A config worker --loglevel=info
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
    depends_on:
      - redis
      - db
    restart: unless-stopped

  # Celery Beat (tasks schedules)
  celery-beat:
    build:
      context: ./backend
    container_name: ffh_celery_beat_prod
    command: celery -A config beat --loglevel=info
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
    depends_on:
      - redis
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:

networks:
  default:
    name: ffh_network_prod
